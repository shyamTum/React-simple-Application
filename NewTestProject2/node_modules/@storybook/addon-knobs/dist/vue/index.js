'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var vueHandler = exports.vueHandler = function vueHandler(channel, knobStore) {
  return function (getStory) {
    return function (context) {
      return {
        render: function render(h) {
          return h(getStory(context));
        },


        methods: {
          onKnobChange: function onKnobChange(change) {
            var name = change.name,
                value = change.value;
            // Update the related knob and it's value.

            var knobOptions = knobStore.get(name);
            knobOptions.value = value;
            this.$forceUpdate();
          },
          onKnobReset: function onKnobReset() {
            knobStore.reset();
            this.setPaneKnobs(false);
            this.$forceUpdate();
          },
          setPaneKnobs: function setPaneKnobs() {
            var timestamp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : +new Date();

            channel.emit('addon:knobs:setKnobs', { knobs: knobStore.getAll(), timestamp: timestamp });
          }
        },

        created: function created() {
          channel.on('addon:knobs:reset', this.onKnobReset);
          channel.on('addon:knobs:knobChange', this.onKnobChange);
          knobStore.subscribe(this.setPaneKnobs);
        },
        beforeDestroy: function beforeDestroy() {
          channel.removeListener('addon:knobs:reset', this.onKnobReset);
          channel.removeListener('addon:knobs:knobChange', this.onKnobChange);
          knobStore.unsubscribe(this.setPaneKnobs);
        }
      };
    };
  };
};